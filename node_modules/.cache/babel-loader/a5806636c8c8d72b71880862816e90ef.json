{"ast":null,"code":"var _jsxFileName = \"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/RouteD3Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tree from 'react-d3-tree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RouteD3Tree = ({\n  route,\n  show\n}) => {\n  _s();\n\n  const [root, setRoot] = useState(null);\n\n  const fetchRoot = async () => {\n    const response = await fetch(`http://localhost:8000/routes/${route.id}`);\n    const data = await response.json();\n    setRoot(data);\n  };\n\n  useEffect(() => {\n    if (show && !root) {\n      fetchRoot();\n    }\n  }, [show]);\n  return show ? /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"treeWrapper\",\n    style: {\n      width: '50em',\n      height: '20em'\n    },\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      data: root\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(RouteD3Tree, \"8g8decIczpVdBdIN9euN3C8hHfs=\");\n\n_c = RouteD3Tree;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteD3Tree\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/RouteD3Tree.js"],"names":["React","useEffect","useState","Tree","RouteD3Tree","route","show","root","setRoot","fetchRoot","response","fetch","id","data","json","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,eAAjB;;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AAAA;;AAC1C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMO,SAAS,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BN,KAAK,CAACO,EAAG,EAA1C,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAN,IAAAA,OAAO,CAACK,IAAD,CAAP;AACH,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,IAAI,IAAI,CAACC,IAAb,EAAkB;AACdE,MAAAA,SAAS;AACZ;AACJ,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;AAMA,SACIA,IAAI,gBACA;AAAK,IAAA,EAAE,EAAC,aAAR;AAAsB,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAA7B;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAET;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA,gBAIA,qCALR;AAOH,CAtBM;;GAAMH,W;;KAAAA,W","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Tree from 'react-d3-tree';\n\nexport const RouteD3Tree = ({route, show}) => {\n    const [root, setRoot] = useState(null);\n\n    const fetchRoot = async () => {\n        const response = await fetch(`http://localhost:8000/routes/${route.id}`);\n        const data = await response.json();\n        setRoot(data);\n    };\n\n    useEffect(() => {\n        if (show && !root){\n            fetchRoot();\n        }\n    }, [show]);\n\n    return (\n        show ? (\n            <div id=\"treeWrapper\" style={{ width: '50em', height: '20em' }}>\n                <Tree data={root} />\n            </div>\n        ) : <></>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}