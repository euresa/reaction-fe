{"ast":null,"code":"var _jsxFileName = \"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Routes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { createUseStyles } from 'react-jss';\nimport { Button } from \"react-bootstrap\"; // use jss styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useRoutesStyles = createUseStyles({\n  foundation: {\n    background: \"lightgray\",\n    width: '100%',\n    height: '100%',\n    margin: 0,\n    padding: 0\n  }\n});\nexport const Routes = ({\n  setCurrentRoute\n}) => {\n  _s();\n\n  const styles = useRoutesStyles();\n  const [routes, setRoutes] = useState([]);\n\n  const fetchRoutes = async () => {\n    const response = await fetch(\"http://localhost:8000/routes\");\n    const newRoutes = await response.json();\n    setRoutes(newRoutes.data);\n  };\n\n  useEffect(() => {\n    fetchRoutes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.foundation,\n    children: routes.map(route => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.foundation,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setCurrentRoute(route),\n        variant: \"light\",\n        id: route.id,\n        children: route.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Routes, \"ffFq+cfPeqFZwF7TJSlQdXc2+Ss=\", false, function () {\n  return [useRoutesStyles];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Routes.js"],"names":["React","useEffect","useState","createUseStyles","Button","useRoutesStyles","foundation","background","width","height","margin","padding","Routes","setCurrentRoute","styles","routes","setRoutes","fetchRoutes","response","fetch","newRoutes","json","data","map","route","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,eAAR,QAA8B,WAA9B;AACA,SAAQC,MAAR,QAAqB,iBAArB,C,CAEA;;;AACA,MAAMC,eAAe,GAAGF,eAAe,CAAC;AACtCG,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE,WADF;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,MAAM,EAAE,CAJE;AAKVC,IAAAA,OAAO,EAAE;AALC;AAD0B,CAAD,CAAvC;AAUA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAuB;AAAA;;AAC3C,QAAMC,MAAM,GAAGT,eAAe,EAA9B;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMe,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACAL,IAAAA,SAAS,CAACI,SAAS,CAACE,IAAX,CAAT;AACD,GAJD;;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACR,UAAvB;AAAA,cACGS,MAAM,CAACQ,GAAP,CAAYC,KAAD,iBACR;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACR,UAAvB;AAAA,6BACE,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAMO,eAAe,CAACW,KAAD,CADlC;AAEI,QAAA,OAAO,EAAC,OAFZ;AAEoB,QAAA,EAAE,EAAEA,KAAK,CAACC,EAF9B;AAAA,kBAIGD,KAAK,CAACE;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5BM;;GAAMd,M;UACIP,e;;;KADJO,M","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {createUseStyles} from 'react-jss';\nimport {Button} from \"react-bootstrap\";\n\n// use jss styling\nconst useRoutesStyles = createUseStyles({\n  foundation: {\n    background: \"lightgray\",\n    width: '100%',\n    height: '100%',\n    margin: 0,\n    padding: 0\n  },\n});\n\nexport const Routes = ({setCurrentRoute}) => {\n  const styles = useRoutesStyles();\n  const [routes, setRoutes] = useState([]);\n\n  const fetchRoutes = async () => {\n    const response = await fetch(\"http://localhost:8000/routes\");\n    const newRoutes = await response.json();\n    setRoutes(newRoutes.data);\n  };\n\n  useEffect(() => {\n    fetchRoutes();\n  }, []);\n\n  return (\n    <div className={styles.foundation}>\n      {routes.map((route) => (\n          <div className={styles.foundation}>\n            <Button\n                onClick={() => setCurrentRoute(route)}\n                variant='light' id={route.id}\n            >\n              {route.name}\n            </Button>\n          </div>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}