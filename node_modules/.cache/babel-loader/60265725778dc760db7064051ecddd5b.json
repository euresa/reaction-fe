{"ast":null,"code":"var _jsxFileName = \"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Route.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Route = ({\n  route\n}) => {\n  _s();\n\n  const [treeData, setTreeData] = useState(null);\n  const [show, setShow] = useState(false);\n\n  const fetchRouteTree = async () => {\n    const response = await fetch(`http://localhost:8000/route/${route.id}`);\n    const data = await response.json();\n    setTreeData(data);\n    setShow(true);\n  };\n\n  const handleClick = () => {\n    if (show) {\n      setShow(false);\n    } else if (treeData) {\n      setShow(true);\n    } else {\n      fetchRouteTree();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: {\n        handleClick\n      },\n      children: route.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: treeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Route, \"0qOWvGEapdsk8gR6x/x/hgobNQ0=\");\n\n_c = Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Route.js"],"names":["React","useEffect","useState","Route","route","treeData","setTreeData","show","setShow","fetchRouteTree","response","fetch","id","data","json","handleClick","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AAGA,QAAMO,cAAc,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BP,KAAK,CAACQ,EAAG,EAAzC,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAR,IAAAA,WAAW,CAACO,IAAD,CAAX;AACAL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GALD;;AAOA,QAAMO,WAAW,GAAG,MAAM;AACtB,QAAIR,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFD,MAEO,IAAIH,QAAJ,EAAc;AACjBG,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFM,MAEA;AACHC,MAAAA,cAAc;AACjB;AACJ,GARD;;AAUA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE;AAACM,QAAAA;AAAD,OAAjB;AAAA,gBAAiCX,KAAK,CAACY;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKT,IAAI,iBAAI;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5BM;;GAAMF,K;;KAAAA,K","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nexport const Route = ({route}) => {\n    const [treeData, setTreeData] = useState(null);\n    const [show, setShow] = useState(false);\n\n\n    const fetchRouteTree = async () => {\n        const response = await fetch(`http://localhost:8000/route/${route.id}`);\n        const data = await response.json();\n        setTreeData(data);\n        setShow(true);\n    };\n\n    const handleClick = () => {\n        if (show) {\n            setShow(false);\n        } else if (treeData) {\n            setShow(true);\n        } else {\n            fetchRouteTree();\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={{handleClick}}>{route.name}</button>\n            {show && <div>{treeData}</div>}\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}