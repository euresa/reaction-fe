{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport const CatalogPicker = ({\n  catalogs,\n  setCatalogs\n}) => {\n  _s();\n\n  const [allCatalogs, setAllCatalogs] = useState([]);\n\n  const fetchCatalogs = async (search, catalogs, reverse) => {\n    const response = await fetch(`http://localhost:8000/catalogs`);\n    const allCatalogs = await response.json();\n    setAllCatalogs(allCatalogs.data);\n  };\n\n  useEffect(() => {\n    fetchCatalogs();\n  }, []);\n  return allCatalogs;\n};\n\n_s(CatalogPicker, \"UdyZJiMJ8eEQT576G14dL5C5F7s=\");\n\n_c = CatalogPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPicker\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/CatalogPicker.js"],"names":["React","useEffect","useState","CatalogPicker","catalogs","setCatalogs","allCatalogs","setAllCatalogs","fetchCatalogs","search","reverse","response","fetch","json","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAAA;;AACtD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMM,aAAa,GAAG,OAAOC,MAAP,EAAeL,QAAf,EAAyBM,OAAzB,KAAqC;AACvD,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,gCADuB,CAA5B;AAGA,UAAMN,WAAW,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAA1B;AACAN,IAAAA,cAAc,CAACD,WAAW,CAACQ,IAAb,CAAd;AACH,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOF,WAAP;AACH,CAfM;;GAAMH,a;;KAAAA,a","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\nexport const CatalogPicker = ({catalogs, setCatalogs}) => {\n    const [allCatalogs, setAllCatalogs] = useState([])\n\n    const fetchCatalogs = async (search, catalogs, reverse) => {\n        const response = await fetch(\n            `http://localhost:8000/catalogs`\n        );\n        const allCatalogs = await response.json();\n        setAllCatalogs(allCatalogs.data);\n    };\n    \n    useEffect(()=>{\n        fetchCatalogs()\n    }, []);\n    return allCatalogs;\n};"]},"metadata":{},"sourceType":"module"}