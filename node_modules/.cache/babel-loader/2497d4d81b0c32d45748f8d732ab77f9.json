{"ast":null,"code":"var _jsxFileName = \"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Route.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Route = ({\n  route\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => {\n    setShow(show => !show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: route.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RouteD3Tree, {\n      root: treeData,\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Route, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Route.js"],"names":["React","useEffect","useState","Route","route","show","setShow","handleClick","name","treeData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMK,WAAW,GAAG,MAAM;AACtBD,IAAAA,OAAO,CAACD,IAAI,IAAI,CAACA,IAAV,CAAP;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA,gBAA+BH,KAAK,CAACI;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEC,QAAnB;AAA6B,MAAA,IAAI,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAbM;;GAAMF,K;;KAAAA,K","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nexport const Route = ({route}) => {\n    const [show, setShow] = useState(false);\n\n    const handleClick = () => {\n        setShow(show => !show)\n    };\n\n    return (\n        <div>\n            <button onClick={handleClick}>{route.name}</button>\n            <RouteD3Tree root={treeData} show={show}/>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}