{"ast":null,"code":"var _jsxFileName = \"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/CatalogPicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { InputGroup } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CatalogPicker = ({\n  catalogs,\n  setCatalogs\n}) => {\n  _s();\n\n  const [allCatalogs, setAllCatalogs] = useState([]);\n\n  const fetchCatalogs = async (search, catalogs, reverse) => {\n    const response = await fetch(`http://localhost:8000/catalogs`);\n    const allCatalogs = await response.json();\n    setAllCatalogs(allCatalogs);\n  };\n\n  useEffect(() => {\n    fetchCatalogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [allCatalogs.map(catalogData => /*#__PURE__*/_jsxDEV(Form, {\n      children: ['checkbox', 'radio'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          // prettier-ignore\n          type: type,\n          id: `default-${type}`,\n          label: `default ${type}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, `default-${type}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CatalogPicker, \"UdyZJiMJ8eEQT576G14dL5C5F7s=\");\n\n_c = CatalogPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPicker\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/CatalogPicker.js"],"names":["React","useEffect","useState","InputGroup","Form","CatalogPicker","catalogs","setCatalogs","allCatalogs","setAllCatalogs","fetchCatalogs","search","reverse","response","fetch","json","map","catalogData","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAAA;;AACtD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMQ,aAAa,GAAG,OAAOC,MAAP,EAAeL,QAAf,EAAyBM,OAAzB,KAAqC;AACvD,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,gCADuB,CAA5B;AAGA,UAAMN,WAAW,GAAG,MAAMK,QAAQ,CAACE,IAAT,EAA1B;AACAN,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAND;;AAQAP,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO;AAAA,eACFF,WAAW,CAACQ,GAAZ,CAAiBC,WAAD,iBACb,QAAC,IAAD;AAAA,gBACK,CAAC,UAAD,EAAa,OAAb,EAAsBD,GAAtB,CAA2BE,IAAD,iBACvB;AAA6B,QAAA,SAAS,EAAC,MAAvC;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAY;AACR,UAAA,IAAI,EAAEA,IADV;AAEI,UAAA,EAAE,EAAG,WAAUA,IAAK,EAFxB;AAGI,UAAA,KAAK,EAAG,WAAUA,IAAK;AAH3B;AAAA;AAAA;AAAA;AAAA;AADJ,SAAW,WAAUA,IAAK,EAA1B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADH,CADE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CA9BM;;GAAMb,a;;KAAAA,a","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {InputGroup} from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\n\n\nexport const CatalogPicker = ({catalogs, setCatalogs}) => {\n    const [allCatalogs, setAllCatalogs] = useState([])\n\n    const fetchCatalogs = async (search, catalogs, reverse) => {\n        const response = await fetch(\n            `http://localhost:8000/catalogs`\n        );\n        const allCatalogs = await response.json();\n        setAllCatalogs(allCatalogs);\n    };\n\n    useEffect(()=>{\n        fetchCatalogs()\n    }, []);\n\n    return <div>\n        {allCatalogs.map((catalogData)=>(\n            <Form>\n                {['checkbox', 'radio'].map((type) => (\n                    <div key={`default-${type}`} className=\"mb-3\">\n                        <Form.Check // prettier-ignore\n                            type={type}\n                            id={`default-${type}`}\n                            label={`default ${type}`}\n                        />\n                    </div>\n                ))}\n            </Form>\n        ))};\n    </div>;\n};"]},"metadata":{},"sourceType":"module"}