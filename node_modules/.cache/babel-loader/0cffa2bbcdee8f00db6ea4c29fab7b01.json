{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nexport const useCenteredTree = (defaultTranslate = {\n  x: 0,\n  y: 0\n}) => {\n  _s();\n\n  const [translate, setTranslate] = useState(defaultTranslate);\n  const [dimensions, setDimensions] = useState();\n  const containerRef = useCallback(containerElem => {\n    if (containerElem !== null) {\n      const {\n        width,\n        height\n      } = containerElem.getBoundingClientRect();\n      setDimensions({\n        width,\n        height\n      });\n      setTranslate({\n        x: width / 2,\n        y: height / 2\n      });\n    }\n  }, []);\n  return [dimensions, translate, containerRef];\n};\n\n_s(useCenteredTree, \"PCqGWFbbOqg7RBZxyQCxkDoSpVY=\");","map":{"version":3,"sources":["/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/helpers.js"],"names":["useCallback","useState","useCenteredTree","defaultTranslate","x","y","translate","setTranslate","dimensions","setDimensions","containerRef","containerElem","width","height","getBoundingClientRect"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,gBAAgB,GAAG;AAAEC,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAApB,KAAuC;AAAA;;AAClE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACE,gBAAD,CAA1C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAMS,YAAY,GAAGV,WAAW,CAAEW,aAAD,IAAmB;AAChD,QAAIA,aAAa,KAAK,IAAtB,EAA4B;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoBF,aAAa,CAACG,qBAAd,EAA1B;AACAL,MAAAA,aAAa,CAAC;AAAEG,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAb;AACAN,MAAAA,YAAY,CAAC;AAAEH,QAAAA,CAAC,EAAEQ,KAAK,GAAG,CAAb;AAAgBP,QAAAA,CAAC,EAAEQ,MAAM,GAAG;AAA5B,OAAD,CAAZ;AACH;AACJ,GAN+B,EAM7B,EAN6B,CAAhC;AAOA,SAAO,CAACL,UAAD,EAAaF,SAAb,EAAwBI,YAAxB,CAAP;AACH,CAXM;;GAAMR,e","sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport const useCenteredTree = (defaultTranslate = { x: 0, y: 0 }) => {\n    const [translate, setTranslate] = useState(defaultTranslate);\n    const [dimensions, setDimensions] = useState();\n    const containerRef = useCallback((containerElem) => {\n        if (containerElem !== null) {\n            const { width, height } = containerElem.getBoundingClientRect();\n            setDimensions({ width, height });\n            setTranslate({ x: width / 2, y: height / 2 });\n        }\n    }, []);\n    return [dimensions, translate, containerRef];\n};\n"]},"metadata":{},"sourceType":"module"}