[{"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/index.js":"1","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/index.js":"2","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Header.js":"3","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Routes.js":"4","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/RouteD3Tree.js":"5","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Main.js":"6","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/SearchBar.js":"7","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/MoleculeNode.js":"8","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/ReactionNode.js":"9","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/CatalogPicker.js":"10"},{"size":306,"mtime":1691271212107,"results":"11","hashOfConfig":"12"},{"size":66,"mtime":1688162548000,"results":"13","hashOfConfig":"12"},{"size":279,"mtime":1691273915130,"results":"14","hashOfConfig":"12"},{"size":1963,"mtime":1691503893172,"results":"15","hashOfConfig":"12"},{"size":2020,"mtime":1691474564925,"results":"16","hashOfConfig":"12"},{"size":2297,"mtime":1691459397132,"results":"17","hashOfConfig":"12"},{"size":521,"mtime":1691375451961,"results":"18","hashOfConfig":"12"},{"size":821,"mtime":1691474485096,"results":"19","hashOfConfig":"12"},{"size":556,"mtime":1691345918018,"results":"20","hashOfConfig":"12"},{"size":1573,"mtime":1691713843538,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mlt9na",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/index.js",[],["46","47"],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/index.js",[],["48","49"],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Header.js",[],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Routes.js",[],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/RouteD3Tree.js",["50"],"import React, {useEffect, useState, useRef} from \"react\";\nimport Tree from 'react-d3-tree';\nimport {useStyles} from \"./Main\";\nimport {MoleculeNode, svgSize} from \"./MoleculeNode\";\nimport {ReactionNode} from \"./ReactionNode\";\n\n\nconst renderRectSvgNode = ({ nodeDatum }) => (\n    nodeDatum.attributes.is_reaction ? (\n        <ReactionNode nodeDatum={nodeDatum}/>\n    ): <MoleculeNode nodeDatum={nodeDatum} />\n);\n\n\nexport const RouteD3Tree = ({route}) => {\n    const styles = useStyles();\n\n    const [rootData, setRootData] = useState(null);\n    const [translate, setTranslate] = useState({ x: svgSize.x*2, y: svgSize.y/2});\n\n    const treeContainerRef = useRef();\n\n    useEffect(() => {\n        if (route) {\n            const fetchRootData = async () => {\n                const response = await fetch(`http://localhost:8000/routes/${route.id}`);\n                const data = await response.json();\n                setRootData(data);\n            };\n            fetchRootData();\n        }\n    }, [route]);\n\n    useEffect(()=>{\n        if (treeContainerRef.current){\n            const dimensions = treeContainerRef.current.getBoundingClientRect();\n            setTranslate({\n                x: dimensions.width * 0.5,\n                y: dimensions.height * 0.05,\n            });\n        }\n    }, [treeContainerRef.current]);\n\n    return (\n        rootData ? (\n            <div\n                id=\"treeWrapper\"\n                className={styles.noSpace}\n                ref={treeContainerRef}\n            >\n                <Tree\n                    id={route.id}\n                    data={rootData}\n                    nodeSize={svgSize}\n                    translate={translate}\n                    orientation=\"verticle\"\n                    renderCustomNodeElement={renderRectSvgNode}\n                    dimentions={{width: svgSize.x, height: svgSize.y}}\n                    separation={{ siblings: 2, nonSiblings: 2 }}\n                    depthFactor={300}\n                />\n            </div>\n        ) : null\n    );\n};\n","/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/Main.js",[],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/SearchBar.js",[],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/MoleculeNode.js",[],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/ReactionNode.js",[],"/Users/sameure/Desktop/Private/PostEra/webdev_interview_challenge-backend_challenge/frontend/src/components/CatalogPicker.js",["51","52"],"import React, {useEffect, useState} from \"react\";\nimport {InputGroup, Row} from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport {useStyles} from \"./Main\";\n\n\nexport const CatalogPicker = ({catalogs, setCatalogs}) => {\n    const styles = useStyles();\n    const [allCatalogs, setAllCatalogs] = useState([])\n\n    const fetchCatalogs = async (search, catalogs, reverse) => {\n        const response = await fetch(\n            `http://localhost:8000/catalogs`\n        );\n        const allCatalogs = await response.json();\n        setAllCatalogs(allCatalogs);\n    };\n\n    useEffect(()=>{\n        fetchCatalogs()\n    }, []);\n\n    const toggleCatalog = (catalog) => {\n        if (catalogs.includes(catalog.id)){\n            setCatalogs(catalogs.filter(id => id !== catalog.id));\n        } else {\n            setCatalogs([...catalogs, catalog.id]);\n        }\n    };\n\n    return (\n        <div>\n            <div className={styles.catalogTitle}>Catalogs</div>\n            <div className={styles.catalogsRows}>\n                <Form>\n                    {allCatalogs.map((catalogData)=>(\n                        <div key=\"default-checkbox\">\n                            <Form.Check\n                                type={\"checkbox\"}\n                                id={catalogData.id}\n                                label={catalogData.name}\n                                onClick={() => toggleCatalog(catalogData)}\n                            />\n                        </div>\n                    ))}\n                </Form>\n            </div>\n        </div>\n    );\n};",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":42,"column":8,"nodeType":"61","endLine":42,"endColumn":34,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":9,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":2,"column":21,"nodeType":"65","messageId":"66","endLine":2,"endColumn":24},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'treeContainerRef.current'. Either exclude it or remove the dependency array. Mutable values like 'treeContainerRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["70"],"no-unused-vars","'InputGroup' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: []",{"range":"73","text":"74"},[1291,1317],"[]"]